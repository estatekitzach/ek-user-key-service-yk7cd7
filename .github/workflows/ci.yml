name: EstateKit API CI

on:
  push:
    branches:
      - main
      - develop
      - 'feature/*'
      - 'bugfix/*'
      - 'hotfix/*'
    paths:
      - 'src/**'
      - 'tests/**'
      - '*.sln'
      - '*.props'
      - '*.targets'
  pull_request:
    branches:
      - main
      - develop
    types:
      - opened
      - synchronize
      - reopened
  workflow_dispatch:

env:
  DOTNET_VERSION: '9.0.x'
  SOLUTION_PATH: 'src/backend/EstateKit.Api.sln'
  BUILD_CONFIGURATION: 'Release'
  NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages
  TEST_DB_CONNECTION: 'Host=postgres;Database=estatekit_test;Username=postgres;Password=integration_test'

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  security-events: write
  actions: read
  packages: read

jobs:
  build:
    name: Build and Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          cache: true
          cache-dependency-path: ${{ env.SOLUTION_PATH }}

      - name: Cache NuGet packages
        uses: actions/cache@v3
        with:
          path: ${{ env.NUGET_PACKAGES }}
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore dependencies
        run: dotnet restore ${{ env.SOLUTION_PATH }}

      - name: Build solution
        run: dotnet build ${{ env.SOLUTION_PATH }} --configuration ${{ env.BUILD_CONFIGURATION }} --no-restore

      - name: Run unit tests
        run: |
          dotnet test ${{ env.SOLUTION_PATH }} \
            --configuration ${{ env.BUILD_CONFIGURATION }} \
            --no-build \
            --collect:"XPlat Code Coverage" \
            --results-directory TestResults \
            --logger "trx;LogFileName=test_results.trx" \
            /p:CollectCoverage=true \
            /p:CoverletOutputFormat=cobertura \
            /p:CoverletOutput=./coverage.xml \
            /p:Threshold=80

      - name: Generate code coverage report
        uses: danielpalme/ReportGenerator-GitHub-Action@5.2.0
        with:
          reports: '**/coverage.xml'
          targetdir: 'coveragereport'
          reporttypes: 'HtmlInline;Cobertura'

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: |
            src/backend/src/EstateKit.Api/bin/Release/net9.0/publish
            TestResults
            coveragereport
          retention-days: 7

  security_scan:
    name: Security Analysis
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: csharp
          queries: security-extended

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          category: "/language:csharp"

      - name: Run OWASP Dependency Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 'EstateKit'
          path: '.'
          format: 'HTML'
          args: >
            --failOnCVSS 7
            --enableRetired

      - name: Build and scan container image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: src/backend/Dockerfile
          push: false
          tags: estatekit-api:${{ github.sha }}
          build-args: |
            DOTNET_VERSION=${{ env.DOTNET_VERSION }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: estatekit-api:${{ github.sha }}
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'HIGH,CRITICAL'
          exit-code: '1'

      - name: Upload security scan results
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: trivy-results.sarif

  integration_tests:
    name: Integration Tests
    needs: build
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_PASSWORD: integration_test
          POSTGRES_DB: estatekit_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7.2
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts

      - name: Run integration tests
        run: |
          dotnet test tests/EstateKit.Api.IntegrationTests \
            --configuration ${{ env.BUILD_CONFIGURATION }} \
            --no-build \
            --logger "trx;LogFileName=integration_test_results.trx" \
            --results-directory TestResults/Integration \
            --filter "Category=Integration"
        env:
          ConnectionStrings__DefaultConnection: ${{ env.TEST_DB_CONNECTION }}
          Redis__ConnectionString: "localhost:6379"

      - name: Upload integration test results
        uses: actions/upload-artifact@v3
        with:
          name: integration-test-results
          path: TestResults/Integration
          retention-days: 7